<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent"
    android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:paddingBottom="@dimen/activity_vertical_margin" tools:context=".MainActivity">

    <!-- xmlns:android = name space 최상위 태그 맨 위에 넣어줘야함.
        그래야 안드로이드에서 제공하는 속성(android:로 시작하는 속성) 을 사용할 수 있음
        name space 이름은 자유 ex) xmlns:asdf android를 주로 사용-->

    <!--View 중 layout은 직접적으로 화면에 보이지 않고 다른 view들을 담는 껍데기 역할.
        정식 명칭은 View Group
        눈에 보이는 것 - 위젯(체크박스, 버튼, 텍스트뷰)
         + 다른 View를 담는 것 - 레이아웃 (RelativieLayout, LinearLayout, GridLayout 등)
         = View
         레이아웃도 View의 일종이기 때문에 레이아웃 안에 여러 레이아웃을 넣는 것도 가능.
         위젯 = 파일 / 레이아웃 = 폴더-->

    <!-- LinearLayout은 한쪽 방향으로만 뷰를 배치 할 수 있는 레이아웃
         android:orientation = "vertical" 세로 / "horizontal" 가로 기본값 가로 -->

    <TextView android:text="Hello World!" android:layout_width="wrap_content"
        android:layout_height="wrap_content" />

    <Button
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="New Button"
        android:id="@+id/button"
        android:layout_centerVertical="true"
        android:layout_centerHorizontal="true" />
        <!-- android:id = "@+id/지정할 아이디" -->

    <!-- layout_width / layout_height 는 view가 반드시 가져야 하는 속성.  생략 시 오류 -->
    <!-- "match_parent" 자기를 감싸고 있는 view(부모)의 크기만큼
         "wrap_content" 자기가 사용하는 영역 만큼
         단위 dp (고정 길이 사용 시), in, mm, pt, px, sp-->

</RelativeLayout>
